
target 'Netneto' do

pod 'Masonry'
pod 'MBProgressHUD'
pod 'IQKeyboardManager'
pod 'AFNetworking'
pod 'SDWebImage'
pod 'MJRefresh'
#pod 'AgoraRtm'
pod 'MJExtension'
pod 'CYLTabBarController'
pod 'JXCategoryView'
pod 'JXPagingView/Pager'
pod 'HBDNavigationBar'
pod 'JHVerificationCodeView'
pod 'TZImagePickerController'
pod 'BRPickerView'
#pod 'VideoLoaderAPI', :path => 'Netneto/ThirdParty/VideoLoaderAPI'
pod 'SDCycleScrollView'
#pod 'TYCyclePagerView'
pod 'YYImage'
pod 'DZNEmptyDataSet'
pod 'BEMCheckBox'
pod 'PPNumberButton'
pod 'JKCategories'
pod 'MGSwipeTableCell'
#pod 'Mantle'
pod 'ReactiveObjC'
pod 'ZYQAssetPickerController', '~> 1.3.1'
pod 'UITableView+FDTemplateLayoutCell'
pod 'SquareInAppPaymentsSDK', '~> 1.6.3'
pod 'SquareBuyerVerificationSDK', '~> 1.6.3'
#pod 'AgoraRtcEngine_iOS'
pod 'AgoraRtcEngine_iOS', '~> 4.5.0'
pod 'TYAttributedLabel'
#pod 'Socket.IO-Client-Swift','15.1.0'
pod 'SocketRocket'
pod 'Protobuf'
pod 'CocoaAsyncSocket'
pod 'HPGrowingTextView'
pod 'SJVideoPlayer'
#pod 'QKeyboardEmotionView', :path => '../'
end
#bitcode_strip_path = `xcrun --find bitcode_strip`.chop!
#  def strip_bitcode_from_framework(bitcode_strip_path, framework_relative_path)
#    framework_path = File.join(Dir.pwd, framework_relative_path)
#    command = "#{bitcode_strip_path} #{framework_path} -r -o #{framework_path}"
#    puts "Stripping bitcode: #{command}"
#    system(command)
#  end
#  framework_paths = [
#    "/Pods/AgoraRtcEngine_Special_iOS/Frameworks/AgoraDav1d.xcframework",
#"/Pods/AgoraRtcEngine_Special_iOS/Frameworks/video_dec.xcframework",
#"/Pods/AgoraRtcEngine_Special_iOS/Frameworks/video_enc.xcframework"
#]
#  framework_paths.each do |framework_relative_path|
#    strip_bitcode_from_framework(bitcode_strip_path, framework_relative_path)
#  end
