// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// clang-format off
// source: imMsg.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30007
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30007 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

#import "ImMsg.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#pragma mark - Objective-C Class declarations
// Forward declarations of Objective-C classes that we can use as
// static values in struct initializers.
// We don't use [Foo class] because it is not a static value.
GPBObjCClassDeclaration(DvyListDeleteReq);
GPBObjCClassDeclaration(DvyListDeleteResp);
GPBObjCClassDeclaration(DvyMsgListReq);
GPBObjCClassDeclaration(DvyMsgListResp);
GPBObjCClassDeclaration(ImDvyMsgInfo);
GPBObjCClassDeclaration(ImDvyMsgInfoReq);
GPBObjCClassDeclaration(ImDvyMsgInfoResp);
GPBObjCClassDeclaration(ImDvyMsgList);
GPBObjCClassDeclaration(ImMsg);
GPBObjCClassDeclaration(ImMsgBody);
GPBObjCClassDeclaration(ImMsgList);
GPBObjCClassDeclaration(ImRefundMsgInfo);
GPBObjCClassDeclaration(ImRefundMsgInfoReq);
GPBObjCClassDeclaration(ImRefundMsgInfoResp);
GPBObjCClassDeclaration(ImRefundMsgList);
GPBObjCClassDeclaration(MsgLabelInfoReq);
GPBObjCClassDeclaration(MsgLabelInfoResp);
GPBObjCClassDeclaration(MsgListDeletedReq);
GPBObjCClassDeclaration(MsgListReq);
GPBObjCClassDeclaration(MsgListResp);
GPBObjCClassDeclaration(MsgRecordReq);
GPBObjCClassDeclaration(MsgRecordResp);
GPBObjCClassDeclaration(RefundListDeleteReq);
GPBObjCClassDeclaration(RefundListDeleteResp);
GPBObjCClassDeclaration(RefundMsgListReq);
GPBObjCClassDeclaration(RefundMsgListResp);
GPBObjCClassDeclaration(RoomJoinReq);
GPBObjCClassDeclaration(RoomJoinResp);
GPBObjCClassDeclaration(RoomLeaveReq);
GPBObjCClassDeclaration(RoomLeaveResp);
GPBObjCClassDeclaration(WebClientHeartBeatReq);
GPBObjCClassDeclaration(WebClientHeartBeatResp);
GPBObjCClassDeclaration(WebClientJoinReq);
GPBObjCClassDeclaration(WebClientJoinResp);
GPBObjCClassDeclaration(WebClientLeaveReq);
GPBObjCClassDeclaration(labelInfoMsg);
GPBObjCClassDeclaration(labelMsg);
GPBObjCClassDeclaration(prodMsg);

#pragma mark - ImMsgRoot

@implementation ImMsgRoot

// No extensions in the file and no imports or none of the imports (direct or
// indirect) defined extensions, so no need to generate +extensionRegistry.

@end

static GPBFileDescription ImMsgRoot_FileDescription = {
  .package = NULL,
  .prefix = NULL,
  .syntax = GPBFileSyntaxProto3
};

#pragma mark - ImMsgBody

@implementation ImMsgBody

@dynamic msgType;
@dynamic bytesData;

typedef struct ImMsgBody__storage_ {
  uint32_t _has_storage_[1];
  int32_t msgType;
  NSData *bytesData;
} ImMsgBody__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "msgType",
        .dataTypeSpecific.clazz = Nil,
        .number = ImMsgBody_FieldNumber_MsgType,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(ImMsgBody__storage_, msgType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "bytesData",
        .dataTypeSpecific.clazz = Nil,
        .number = ImMsgBody_FieldNumber_BytesData,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(ImMsgBody__storage_, bytesData),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeBytes,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(ImMsgBody)
                                   messageName:@"ImMsgBody"
                               fileDescription:&ImMsgRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(ImMsgBody__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
      static const char *extraTextFormatInfo =
        "\002\001\007\000\002\t\000";
      [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
    #endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - WebClientHeartBeatReq

@implementation WebClientHeartBeatReq

@dynamic userId;
@dynamic imChannel;

typedef struct WebClientHeartBeatReq__storage_ {
  uint32_t _has_storage_[1];
  NSString *userId;
  NSString *imChannel;
} WebClientHeartBeatReq__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "userId",
        .dataTypeSpecific.clazz = Nil,
        .number = WebClientHeartBeatReq_FieldNumber_UserId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(WebClientHeartBeatReq__storage_, userId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "imChannel",
        .dataTypeSpecific.clazz = Nil,
        .number = WebClientHeartBeatReq_FieldNumber_ImChannel,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(WebClientHeartBeatReq__storage_, imChannel),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(WebClientHeartBeatReq)
                                   messageName:@"WebClientHeartBeatReq"
                               fileDescription:&ImMsgRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(WebClientHeartBeatReq__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
      static const char *extraTextFormatInfo =
        "\002\001\006\000\002\t\000";
      [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
    #endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - WebClientHeartBeatResp

@implementation WebClientHeartBeatResp

@dynamic userId;
@dynamic imChannel;

typedef struct WebClientHeartBeatResp__storage_ {
  uint32_t _has_storage_[1];
  NSString *userId;
  NSString *imChannel;
} WebClientHeartBeatResp__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "userId",
        .dataTypeSpecific.clazz = Nil,
        .number = WebClientHeartBeatResp_FieldNumber_UserId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(WebClientHeartBeatResp__storage_, userId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "imChannel",
        .dataTypeSpecific.clazz = Nil,
        .number = WebClientHeartBeatResp_FieldNumber_ImChannel,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(WebClientHeartBeatResp__storage_, imChannel),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(WebClientHeartBeatResp)
                                   messageName:@"WebClientHeartBeatResp"
                               fileDescription:&ImMsgRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(WebClientHeartBeatResp__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
      static const char *extraTextFormatInfo =
        "\002\001\006\000\002\t\000";
      [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
    #endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - WebClientJoinReq

@implementation WebClientJoinReq

@dynamic userId;
@dynamic name;
@dynamic userImg;
@dynamic isMerchant;

typedef struct WebClientJoinReq__storage_ {
  uint32_t _has_storage_[1];
  int32_t isMerchant;
  NSString *userId;
  NSString *name;
  NSString *userImg;
} WebClientJoinReq__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "userId",
        .dataTypeSpecific.clazz = Nil,
        .number = WebClientJoinReq_FieldNumber_UserId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(WebClientJoinReq__storage_, userId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "name",
        .dataTypeSpecific.clazz = Nil,
        .number = WebClientJoinReq_FieldNumber_Name,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(WebClientJoinReq__storage_, name),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "userImg",
        .dataTypeSpecific.clazz = Nil,
        .number = WebClientJoinReq_FieldNumber_UserImg,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(WebClientJoinReq__storage_, userImg),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "isMerchant",
        .dataTypeSpecific.clazz = Nil,
        .number = WebClientJoinReq_FieldNumber_IsMerchant,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(WebClientJoinReq__storage_, isMerchant),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(WebClientJoinReq)
                                   messageName:@"WebClientJoinReq"
                               fileDescription:&ImMsgRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(WebClientJoinReq__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
      static const char *extraTextFormatInfo =
        "\003\001\006\000\003\007\000\004\n\000";
      [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
    #endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - WebClientJoinResp

@implementation WebClientJoinResp

@dynamic userId;

typedef struct WebClientJoinResp__storage_ {
  uint32_t _has_storage_[1];
  NSString *userId;
} WebClientJoinResp__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "userId",
        .dataTypeSpecific.clazz = Nil,
        .number = WebClientJoinResp_FieldNumber_UserId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(WebClientJoinResp__storage_, userId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(WebClientJoinResp)
                                   messageName:@"WebClientJoinResp"
                               fileDescription:&ImMsgRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(WebClientJoinResp__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
      static const char *extraTextFormatInfo =
        "\001\001\006\000";
      [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
    #endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - WebClientLeaveReq

@implementation WebClientLeaveReq

@dynamic userId;

typedef struct WebClientLeaveReq__storage_ {
  uint32_t _has_storage_[1];
  NSString *userId;
} WebClientLeaveReq__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "userId",
        .dataTypeSpecific.clazz = Nil,
        .number = WebClientLeaveReq_FieldNumber_UserId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(WebClientLeaveReq__storage_, userId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(WebClientLeaveReq)
                                   messageName:@"WebClientLeaveReq"
                               fileDescription:&ImMsgRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(WebClientLeaveReq__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
      static const char *extraTextFormatInfo =
        "\001\001\006\000";
      [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
    #endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - RoomJoinReq

@implementation RoomJoinReq

@dynamic shopId;
@dynamic imChannel;
@dynamic userId;
@dynamic fromUserId;
@dynamic toUserId;
@dynamic name;
@dynamic userImg;

typedef struct RoomJoinReq__storage_ {
  uint32_t _has_storage_[1];
  NSString *imChannel;
  NSString *userId;
  NSString *fromUserId;
  NSString *toUserId;
  NSString *name;
  NSString *userImg;
  int64_t shopId;
} RoomJoinReq__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "shopId",
        .dataTypeSpecific.clazz = Nil,
        .number = RoomJoinReq_FieldNumber_ShopId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(RoomJoinReq__storage_, shopId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "imChannel",
        .dataTypeSpecific.clazz = Nil,
        .number = RoomJoinReq_FieldNumber_ImChannel,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(RoomJoinReq__storage_, imChannel),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "userId",
        .dataTypeSpecific.clazz = Nil,
        .number = RoomJoinReq_FieldNumber_UserId,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(RoomJoinReq__storage_, userId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "fromUserId",
        .dataTypeSpecific.clazz = Nil,
        .number = RoomJoinReq_FieldNumber_FromUserId,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(RoomJoinReq__storage_, fromUserId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "toUserId",
        .dataTypeSpecific.clazz = Nil,
        .number = RoomJoinReq_FieldNumber_ToUserId,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(RoomJoinReq__storage_, toUserId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "name",
        .dataTypeSpecific.clazz = Nil,
        .number = RoomJoinReq_FieldNumber_Name,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(RoomJoinReq__storage_, name),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "userImg",
        .dataTypeSpecific.clazz = Nil,
        .number = RoomJoinReq_FieldNumber_UserImg,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(RoomJoinReq__storage_, userImg),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(RoomJoinReq)
                                   messageName:@"RoomJoinReq"
                               fileDescription:&ImMsgRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(RoomJoinReq__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
      static const char *extraTextFormatInfo =
        "\006\001\006\000\002\t\000\003\006\000\004\n\000\005\010\000\007\007\000";
      [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
    #endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - RoomJoinResp

@implementation RoomJoinResp

@dynamic shopId;
@dynamic imChannel;
@dynamic userId;
@dynamic labelMsgListArray, labelMsgListArray_Count;

typedef struct RoomJoinResp__storage_ {
  uint32_t _has_storage_[1];
  NSString *imChannel;
  NSString *userId;
  NSMutableArray *labelMsgListArray;
  int64_t shopId;
} RoomJoinResp__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "shopId",
        .dataTypeSpecific.clazz = Nil,
        .number = RoomJoinResp_FieldNumber_ShopId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(RoomJoinResp__storage_, shopId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "imChannel",
        .dataTypeSpecific.clazz = Nil,
        .number = RoomJoinResp_FieldNumber_ImChannel,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(RoomJoinResp__storage_, imChannel),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "userId",
        .dataTypeSpecific.clazz = Nil,
        .number = RoomJoinResp_FieldNumber_UserId,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(RoomJoinResp__storage_, userId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "labelMsgListArray",
        .dataTypeSpecific.clazz = GPBObjCClass(labelMsg),
        .number = RoomJoinResp_FieldNumber_LabelMsgListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(RoomJoinResp__storage_, labelMsgListArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(RoomJoinResp)
                                   messageName:@"RoomJoinResp"
                               fileDescription:&ImMsgRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(RoomJoinResp__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
      static const char *extraTextFormatInfo =
        "\004\001\006\000\002\t\000\003\006\000\004\000labelMsgList\000";
      [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
    #endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - RoomLeaveReq

@implementation RoomLeaveReq

@dynamic imChannel;
@dynamic userId;

typedef struct RoomLeaveReq__storage_ {
  uint32_t _has_storage_[1];
  NSString *imChannel;
  NSString *userId;
} RoomLeaveReq__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "imChannel",
        .dataTypeSpecific.clazz = Nil,
        .number = RoomLeaveReq_FieldNumber_ImChannel,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(RoomLeaveReq__storage_, imChannel),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "userId",
        .dataTypeSpecific.clazz = Nil,
        .number = RoomLeaveReq_FieldNumber_UserId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(RoomLeaveReq__storage_, userId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(RoomLeaveReq)
                                   messageName:@"RoomLeaveReq"
                               fileDescription:&ImMsgRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(RoomLeaveReq__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
      static const char *extraTextFormatInfo =
        "\002\001\t\000\002\006\000";
      [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
    #endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - RoomLeaveResp

@implementation RoomLeaveResp

@dynamic imChannel;
@dynamic userId;

typedef struct RoomLeaveResp__storage_ {
  uint32_t _has_storage_[1];
  NSString *imChannel;
  NSString *userId;
} RoomLeaveResp__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "imChannel",
        .dataTypeSpecific.clazz = Nil,
        .number = RoomLeaveResp_FieldNumber_ImChannel,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(RoomLeaveResp__storage_, imChannel),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "userId",
        .dataTypeSpecific.clazz = Nil,
        .number = RoomLeaveResp_FieldNumber_UserId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(RoomLeaveResp__storage_, userId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(RoomLeaveResp)
                                   messageName:@"RoomLeaveResp"
                               fileDescription:&ImMsgRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(RoomLeaveResp__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
      static const char *extraTextFormatInfo =
        "\002\001\t\000\002\006\000";
      [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
    #endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - MsgListReq

@implementation MsgListReq

@dynamic userId;

typedef struct MsgListReq__storage_ {
  uint32_t _has_storage_[1];
  NSString *userId;
} MsgListReq__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "userId",
        .dataTypeSpecific.clazz = Nil,
        .number = MsgListReq_FieldNumber_UserId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(MsgListReq__storage_, userId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(MsgListReq)
                                   messageName:@"MsgListReq"
                               fileDescription:&ImMsgRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(MsgListReq__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
      static const char *extraTextFormatInfo =
        "\001\001\006\000";
      [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
    #endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - MsgListResp

@implementation MsgListResp

@dynamic userId;
@dynamic msgUnReadCount;
@dynamic dvyUnReadCount;
@dynamic refundUnReadCount;
@dynamic imMsgListArray, imMsgListArray_Count;

typedef struct MsgListResp__storage_ {
  uint32_t _has_storage_[1];
  int32_t msgUnReadCount;
  int32_t dvyUnReadCount;
  int32_t refundUnReadCount;
  NSString *userId;
  NSMutableArray *imMsgListArray;
} MsgListResp__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "userId",
        .dataTypeSpecific.clazz = Nil,
        .number = MsgListResp_FieldNumber_UserId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(MsgListResp__storage_, userId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "msgUnReadCount",
        .dataTypeSpecific.clazz = Nil,
        .number = MsgListResp_FieldNumber_MsgUnReadCount,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(MsgListResp__storage_, msgUnReadCount),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "dvyUnReadCount",
        .dataTypeSpecific.clazz = Nil,
        .number = MsgListResp_FieldNumber_DvyUnReadCount,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(MsgListResp__storage_, dvyUnReadCount),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "refundUnReadCount",
        .dataTypeSpecific.clazz = Nil,
        .number = MsgListResp_FieldNumber_RefundUnReadCount,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(MsgListResp__storage_, refundUnReadCount),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "imMsgListArray",
        .dataTypeSpecific.clazz = GPBObjCClass(ImMsgList),
        .number = MsgListResp_FieldNumber_ImMsgListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(MsgListResp__storage_, imMsgListArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(MsgListResp)
                                   messageName:@"MsgListResp"
                               fileDescription:&ImMsgRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(MsgListResp__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
      static const char *extraTextFormatInfo =
        "\005\001\006\000\002\016\000\003\016\000\004\021\000\005\000ImMsgList\000";
      [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
    #endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - MsgListDeletedReq

@implementation MsgListDeletedReq

@dynamic userId;
@dynamic imChannel;

typedef struct MsgListDeletedReq__storage_ {
  uint32_t _has_storage_[1];
  NSString *userId;
  NSString *imChannel;
} MsgListDeletedReq__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "userId",
        .dataTypeSpecific.clazz = Nil,
        .number = MsgListDeletedReq_FieldNumber_UserId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(MsgListDeletedReq__storage_, userId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "imChannel",
        .dataTypeSpecific.clazz = Nil,
        .number = MsgListDeletedReq_FieldNumber_ImChannel,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(MsgListDeletedReq__storage_, imChannel),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(MsgListDeletedReq)
                                   messageName:@"MsgListDeletedReq"
                               fileDescription:&ImMsgRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(MsgListDeletedReq__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
      static const char *extraTextFormatInfo =
        "\002\001\006\000\002\t\000";
      [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
    #endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - MsgRecordReq

@implementation MsgRecordReq

@dynamic imChannel;
@dynamic userId;
@dynamic pageNum;
@dynamic pageSize;

typedef struct MsgRecordReq__storage_ {
  uint32_t _has_storage_[1];
  int32_t pageNum;
  int32_t pageSize;
  NSString *imChannel;
  NSString *userId;
} MsgRecordReq__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "imChannel",
        .dataTypeSpecific.clazz = Nil,
        .number = MsgRecordReq_FieldNumber_ImChannel,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(MsgRecordReq__storage_, imChannel),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "userId",
        .dataTypeSpecific.clazz = Nil,
        .number = MsgRecordReq_FieldNumber_UserId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(MsgRecordReq__storage_, userId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "pageNum",
        .dataTypeSpecific.clazz = Nil,
        .number = MsgRecordReq_FieldNumber_PageNum,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(MsgRecordReq__storage_, pageNum),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "pageSize",
        .dataTypeSpecific.clazz = Nil,
        .number = MsgRecordReq_FieldNumber_PageSize,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(MsgRecordReq__storage_, pageSize),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(MsgRecordReq)
                                   messageName:@"MsgRecordReq"
                               fileDescription:&ImMsgRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(MsgRecordReq__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
      static const char *extraTextFormatInfo =
        "\004\001\t\000\002\006\000\003\007\000\004\010\000";
      [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
    #endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - MsgRecordResp

@implementation MsgRecordResp

@dynamic imChannel;
@dynamic userId;
@dynamic imMsgRecordArray, imMsgRecordArray_Count;

typedef struct MsgRecordResp__storage_ {
  uint32_t _has_storage_[1];
  NSString *imChannel;
  NSString *userId;
  NSMutableArray *imMsgRecordArray;
} MsgRecordResp__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "imChannel",
        .dataTypeSpecific.clazz = Nil,
        .number = MsgRecordResp_FieldNumber_ImChannel,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(MsgRecordResp__storage_, imChannel),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "userId",
        .dataTypeSpecific.clazz = Nil,
        .number = MsgRecordResp_FieldNumber_UserId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(MsgRecordResp__storage_, userId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "imMsgRecordArray",
        .dataTypeSpecific.clazz = GPBObjCClass(ImMsg),
        .number = MsgRecordResp_FieldNumber_ImMsgRecordArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(MsgRecordResp__storage_, imMsgRecordArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(MsgRecordResp)
                                   messageName:@"MsgRecordResp"
                               fileDescription:&ImMsgRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(MsgRecordResp__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
      static const char *extraTextFormatInfo =
        "\003\001\t\000\002\006\000\003\000ImMsgRecord\000";
      [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
    #endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - MsgLabelInfoReq

@implementation MsgLabelInfoReq

@dynamic imLabelId;

typedef struct MsgLabelInfoReq__storage_ {
  uint32_t _has_storage_[1];
  int64_t imLabelId;
} MsgLabelInfoReq__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "imLabelId",
        .dataTypeSpecific.clazz = Nil,
        .number = MsgLabelInfoReq_FieldNumber_ImLabelId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(MsgLabelInfoReq__storage_, imLabelId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(MsgLabelInfoReq)
                                   messageName:@"MsgLabelInfoReq"
                               fileDescription:&ImMsgRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(MsgLabelInfoReq__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
      static const char *extraTextFormatInfo =
        "\001\001\t\000";
      [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
    #endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - MsgLabelInfoResp

@implementation MsgLabelInfoResp

@dynamic labelInfoListArray, labelInfoListArray_Count;

typedef struct MsgLabelInfoResp__storage_ {
  uint32_t _has_storage_[1];
  NSMutableArray *labelInfoListArray;
} MsgLabelInfoResp__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "labelInfoListArray",
        .dataTypeSpecific.clazz = GPBObjCClass(labelInfoMsg),
        .number = MsgLabelInfoResp_FieldNumber_LabelInfoListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(MsgLabelInfoResp__storage_, labelInfoListArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(MsgLabelInfoResp)
                                   messageName:@"MsgLabelInfoResp"
                               fileDescription:&ImMsgRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(MsgLabelInfoResp__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
      static const char *extraTextFormatInfo =
        "\001\001\000labelInfoList\000";
      [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
    #endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - ImMsg

@implementation ImMsg

@dynamic imChannel;
@dynamic fromUserId;
@dynamic toUserId;
@dynamic content;
@dynamic createTime;
@dynamic readStatus;
@dynamic contentType;

typedef struct ImMsg__storage_ {
  uint32_t _has_storage_[1];
  int32_t readStatus;
  int32_t contentType;
  NSString *imChannel;
  NSString *fromUserId;
  NSString *toUserId;
  NSString *content;
  NSString *createTime;
} ImMsg__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "imChannel",
        .dataTypeSpecific.clazz = Nil,
        .number = ImMsg_FieldNumber_ImChannel,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(ImMsg__storage_, imChannel),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "fromUserId",
        .dataTypeSpecific.clazz = Nil,
        .number = ImMsg_FieldNumber_FromUserId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(ImMsg__storage_, fromUserId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "toUserId",
        .dataTypeSpecific.clazz = Nil,
        .number = ImMsg_FieldNumber_ToUserId,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(ImMsg__storage_, toUserId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "content",
        .dataTypeSpecific.clazz = Nil,
        .number = ImMsg_FieldNumber_Content,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(ImMsg__storage_, content),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.clazz = Nil,
        .number = ImMsg_FieldNumber_CreateTime,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(ImMsg__storage_, createTime),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "readStatus",
        .dataTypeSpecific.clazz = Nil,
        .number = ImMsg_FieldNumber_ReadStatus,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(ImMsg__storage_, readStatus),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "contentType",
        .dataTypeSpecific.clazz = Nil,
        .number = ImMsg_FieldNumber_ContentType,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(ImMsg__storage_, contentType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(ImMsg)
                                   messageName:@"ImMsg"
                               fileDescription:&ImMsgRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(ImMsg__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
      static const char *extraTextFormatInfo =
        "\006\001\t\000\002\n\000\003\010\000\005\n\000\006\n\000\007\013\000";
      [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
    #endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - prodMsg

@implementation prodMsg

@dynamic imChannel;
@dynamic fromUserId;
@dynamic toUserId;
@dynamic prodId;
@dynamic prodName;
@dynamic skuName;
@dynamic prodImg;
@dynamic price;
@dynamic readStatus;
@dynamic createTime;

typedef struct prodMsg__storage_ {
  uint32_t _has_storage_[1];
  int32_t readStatus;
  NSString *imChannel;
  NSString *fromUserId;
  NSString *toUserId;
  NSString *prodName;
  NSString *skuName;
  NSString *prodImg;
  NSString *createTime;
  int64_t prodId;
  int64_t price;
} prodMsg__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "imChannel",
        .dataTypeSpecific.clazz = Nil,
        .number = prodMsg_FieldNumber_ImChannel,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(prodMsg__storage_, imChannel),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "fromUserId",
        .dataTypeSpecific.clazz = Nil,
        .number = prodMsg_FieldNumber_FromUserId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(prodMsg__storage_, fromUserId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "toUserId",
        .dataTypeSpecific.clazz = Nil,
        .number = prodMsg_FieldNumber_ToUserId,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(prodMsg__storage_, toUserId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "prodId",
        .dataTypeSpecific.clazz = Nil,
        .number = prodMsg_FieldNumber_ProdId,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(prodMsg__storage_, prodId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "prodName",
        .dataTypeSpecific.clazz = Nil,
        .number = prodMsg_FieldNumber_ProdName,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(prodMsg__storage_, prodName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "skuName",
        .dataTypeSpecific.clazz = Nil,
        .number = prodMsg_FieldNumber_SkuName,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(prodMsg__storage_, skuName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "prodImg",
        .dataTypeSpecific.clazz = Nil,
        .number = prodMsg_FieldNumber_ProdImg,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(prodMsg__storage_, prodImg),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "price",
        .dataTypeSpecific.clazz = Nil,
        .number = prodMsg_FieldNumber_Price,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(prodMsg__storage_, price),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "readStatus",
        .dataTypeSpecific.clazz = Nil,
        .number = prodMsg_FieldNumber_ReadStatus,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(prodMsg__storage_, readStatus),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.clazz = Nil,
        .number = prodMsg_FieldNumber_CreateTime,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(prodMsg__storage_, createTime),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(prodMsg)
                                   messageName:@"prodMsg"
                               fileDescription:&ImMsgRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(prodMsg__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
      static const char *extraTextFormatInfo =
        "\t\001\t\000\002\n\000\003\010\000\004\006\000\005\010\000\006\007\000\007\007\000\t\n\000\n\n\000";
      [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
    #endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - ImMsgList

@implementation ImMsgList

@dynamic imChannel;
@dynamic name;
@dynamic userImg;
@dynamic fromUserId;
@dynamic toUserId;
@dynamic endMsg;
@dynamic contentType;
@dynamic endMsgTime;
@dynamic unReadSize;
@dynamic isMerchant;
@dynamic shopId;

typedef struct ImMsgList__storage_ {
  uint32_t _has_storage_[1];
  int32_t contentType;
  int32_t unReadSize;
  int32_t isMerchant;
  NSString *imChannel;
  NSString *name;
  NSString *userImg;
  NSString *fromUserId;
  NSString *toUserId;
  NSString *endMsg;
  NSString *endMsgTime;
  int64_t shopId;
} ImMsgList__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "imChannel",
        .dataTypeSpecific.clazz = Nil,
        .number = ImMsgList_FieldNumber_ImChannel,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(ImMsgList__storage_, imChannel),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "name",
        .dataTypeSpecific.clazz = Nil,
        .number = ImMsgList_FieldNumber_Name,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(ImMsgList__storage_, name),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "userImg",
        .dataTypeSpecific.clazz = Nil,
        .number = ImMsgList_FieldNumber_UserImg,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(ImMsgList__storage_, userImg),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "fromUserId",
        .dataTypeSpecific.clazz = Nil,
        .number = ImMsgList_FieldNumber_FromUserId,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(ImMsgList__storage_, fromUserId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "toUserId",
        .dataTypeSpecific.clazz = Nil,
        .number = ImMsgList_FieldNumber_ToUserId,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(ImMsgList__storage_, toUserId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "endMsg",
        .dataTypeSpecific.clazz = Nil,
        .number = ImMsgList_FieldNumber_EndMsg,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(ImMsgList__storage_, endMsg),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "contentType",
        .dataTypeSpecific.clazz = Nil,
        .number = ImMsgList_FieldNumber_ContentType,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(ImMsgList__storage_, contentType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "endMsgTime",
        .dataTypeSpecific.clazz = Nil,
        .number = ImMsgList_FieldNumber_EndMsgTime,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(ImMsgList__storage_, endMsgTime),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "unReadSize",
        .dataTypeSpecific.clazz = Nil,
        .number = ImMsgList_FieldNumber_UnReadSize,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(ImMsgList__storage_, unReadSize),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "isMerchant",
        .dataTypeSpecific.clazz = Nil,
        .number = ImMsgList_FieldNumber_IsMerchant,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(ImMsgList__storage_, isMerchant),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "shopId",
        .dataTypeSpecific.clazz = Nil,
        .number = ImMsgList_FieldNumber_ShopId,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(ImMsgList__storage_, shopId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(ImMsgList)
                                   messageName:@"ImMsgList"
                               fileDescription:&ImMsgRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(ImMsgList__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
      static const char *extraTextFormatInfo =
        "\n\001\t\000\003\007\000\004\n\000\005\010\000\006\006\000\007\013\000\010\n\000\t\n\000\n\n\000\013\006\000";
      [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
    #endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - labelMsg

@implementation labelMsg

@dynamic imLabelId;
@dynamic labelName;

typedef struct labelMsg__storage_ {
  uint32_t _has_storage_[1];
  NSString *labelName;
  int64_t imLabelId;
} labelMsg__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "imLabelId",
        .dataTypeSpecific.clazz = Nil,
        .number = labelMsg_FieldNumber_ImLabelId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(labelMsg__storage_, imLabelId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "labelName",
        .dataTypeSpecific.clazz = Nil,
        .number = labelMsg_FieldNumber_LabelName,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(labelMsg__storage_, labelName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(labelMsg)
                                   messageName:@"labelMsg"
                               fileDescription:&ImMsgRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(labelMsg__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
      static const char *extraTextFormatInfo =
        "\002\001\t\000\002\t\000";
      [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
    #endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - labelInfoMsg

@implementation labelInfoMsg

@dynamic imLabelId;
@dynamic labelInfoTitle;
@dynamic labelInfoContent;
@dynamic labelInfoValue;

typedef struct labelInfoMsg__storage_ {
  uint32_t _has_storage_[1];
  NSString *labelInfoTitle;
  NSString *labelInfoContent;
  NSString *labelInfoValue;
  int64_t imLabelId;
} labelInfoMsg__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "imLabelId",
        .dataTypeSpecific.clazz = Nil,
        .number = labelInfoMsg_FieldNumber_ImLabelId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(labelInfoMsg__storage_, imLabelId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "labelInfoTitle",
        .dataTypeSpecific.clazz = Nil,
        .number = labelInfoMsg_FieldNumber_LabelInfoTitle,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(labelInfoMsg__storage_, labelInfoTitle),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "labelInfoContent",
        .dataTypeSpecific.clazz = Nil,
        .number = labelInfoMsg_FieldNumber_LabelInfoContent,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(labelInfoMsg__storage_, labelInfoContent),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "labelInfoValue",
        .dataTypeSpecific.clazz = Nil,
        .number = labelInfoMsg_FieldNumber_LabelInfoValue,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(labelInfoMsg__storage_, labelInfoValue),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(labelInfoMsg)
                                   messageName:@"labelInfoMsg"
                               fileDescription:&ImMsgRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(labelInfoMsg__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
      static const char *extraTextFormatInfo =
        "\004\001\t\000\002\016\000\003\020\000\004\016\000";
      [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
    #endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - DvyMsgListReq

@implementation DvyMsgListReq

@dynamic userId;
@dynamic pageNum;
@dynamic pageSize;

typedef struct DvyMsgListReq__storage_ {
  uint32_t _has_storage_[1];
  int32_t pageNum;
  int32_t pageSize;
  NSString *userId;
} DvyMsgListReq__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "userId",
        .dataTypeSpecific.clazz = Nil,
        .number = DvyMsgListReq_FieldNumber_UserId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(DvyMsgListReq__storage_, userId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "pageNum",
        .dataTypeSpecific.clazz = Nil,
        .number = DvyMsgListReq_FieldNumber_PageNum,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(DvyMsgListReq__storage_, pageNum),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "pageSize",
        .dataTypeSpecific.clazz = Nil,
        .number = DvyMsgListReq_FieldNumber_PageSize,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(DvyMsgListReq__storage_, pageSize),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(DvyMsgListReq)
                                   messageName:@"DvyMsgListReq"
                               fileDescription:&ImMsgRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(DvyMsgListReq__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
      static const char *extraTextFormatInfo =
        "\003\001\006\000\002\007\000\003\010\000";
      [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
    #endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - DvyMsgListResp

@implementation DvyMsgListResp

@dynamic userId;
@dynamic msgUnReadCount;
@dynamic dvyUnReadCount;
@dynamic refundUnReadCount;
@dynamic imDvyMsgListsArray, imDvyMsgListsArray_Count;

typedef struct DvyMsgListResp__storage_ {
  uint32_t _has_storage_[1];
  int32_t msgUnReadCount;
  int32_t dvyUnReadCount;
  int32_t refundUnReadCount;
  NSString *userId;
  NSMutableArray *imDvyMsgListsArray;
} DvyMsgListResp__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "userId",
        .dataTypeSpecific.clazz = Nil,
        .number = DvyMsgListResp_FieldNumber_UserId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(DvyMsgListResp__storage_, userId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "msgUnReadCount",
        .dataTypeSpecific.clazz = Nil,
        .number = DvyMsgListResp_FieldNumber_MsgUnReadCount,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(DvyMsgListResp__storage_, msgUnReadCount),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "dvyUnReadCount",
        .dataTypeSpecific.clazz = Nil,
        .number = DvyMsgListResp_FieldNumber_DvyUnReadCount,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(DvyMsgListResp__storage_, dvyUnReadCount),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "refundUnReadCount",
        .dataTypeSpecific.clazz = Nil,
        .number = DvyMsgListResp_FieldNumber_RefundUnReadCount,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(DvyMsgListResp__storage_, refundUnReadCount),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "imDvyMsgListsArray",
        .dataTypeSpecific.clazz = GPBObjCClass(ImDvyMsgList),
        .number = DvyMsgListResp_FieldNumber_ImDvyMsgListsArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(DvyMsgListResp__storage_, imDvyMsgListsArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(DvyMsgListResp)
                                   messageName:@"DvyMsgListResp"
                               fileDescription:&ImMsgRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(DvyMsgListResp__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
      static const char *extraTextFormatInfo =
        "\005\001\006\000\002\016\000\003\016\000\004\021\000\005\000imDvyMsgLists\000";
      [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
    #endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - ImDvyMsgList

@implementation ImDvyMsgList

@dynamic imChannel;
@dynamic shopId;
@dynamic shopName;
@dynamic shopImg;
@dynamic endMsg;
@dynamic unReadSize;
@dynamic endMsgTime;

typedef struct ImDvyMsgList__storage_ {
  uint32_t _has_storage_[1];
  int32_t unReadSize;
  NSString *imChannel;
  NSString *shopName;
  NSString *shopImg;
  NSString *endMsg;
  NSString *endMsgTime;
  int64_t shopId;
} ImDvyMsgList__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "imChannel",
        .dataTypeSpecific.clazz = Nil,
        .number = ImDvyMsgList_FieldNumber_ImChannel,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(ImDvyMsgList__storage_, imChannel),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "shopId",
        .dataTypeSpecific.clazz = Nil,
        .number = ImDvyMsgList_FieldNumber_ShopId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(ImDvyMsgList__storage_, shopId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "shopName",
        .dataTypeSpecific.clazz = Nil,
        .number = ImDvyMsgList_FieldNumber_ShopName,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(ImDvyMsgList__storage_, shopName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "shopImg",
        .dataTypeSpecific.clazz = Nil,
        .number = ImDvyMsgList_FieldNumber_ShopImg,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(ImDvyMsgList__storage_, shopImg),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "endMsg",
        .dataTypeSpecific.clazz = Nil,
        .number = ImDvyMsgList_FieldNumber_EndMsg,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(ImDvyMsgList__storage_, endMsg),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "unReadSize",
        .dataTypeSpecific.clazz = Nil,
        .number = ImDvyMsgList_FieldNumber_UnReadSize,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(ImDvyMsgList__storage_, unReadSize),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "endMsgTime",
        .dataTypeSpecific.clazz = Nil,
        .number = ImDvyMsgList_FieldNumber_EndMsgTime,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(ImDvyMsgList__storage_, endMsgTime),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(ImDvyMsgList)
                                   messageName:@"ImDvyMsgList"
                               fileDescription:&ImMsgRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(ImDvyMsgList__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
      static const char *extraTextFormatInfo =
        "\007\001\t\000\002\006\000\003\010\000\004\007\000\005\006\000\006\n\000\007\n\000";
      [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
    #endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - ImDvyMsgInfoReq

@implementation ImDvyMsgInfoReq

@dynamic imChannelId;
@dynamic userId;
@dynamic pageNum;
@dynamic pageSize;

typedef struct ImDvyMsgInfoReq__storage_ {
  uint32_t _has_storage_[1];
  int32_t pageNum;
  int32_t pageSize;
  NSString *imChannelId;
  NSString *userId;
} ImDvyMsgInfoReq__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "imChannelId",
        .dataTypeSpecific.clazz = Nil,
        .number = ImDvyMsgInfoReq_FieldNumber_ImChannelId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(ImDvyMsgInfoReq__storage_, imChannelId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "userId",
        .dataTypeSpecific.clazz = Nil,
        .number = ImDvyMsgInfoReq_FieldNumber_UserId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(ImDvyMsgInfoReq__storage_, userId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "pageNum",
        .dataTypeSpecific.clazz = Nil,
        .number = ImDvyMsgInfoReq_FieldNumber_PageNum,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(ImDvyMsgInfoReq__storage_, pageNum),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "pageSize",
        .dataTypeSpecific.clazz = Nil,
        .number = ImDvyMsgInfoReq_FieldNumber_PageSize,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(ImDvyMsgInfoReq__storage_, pageSize),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(ImDvyMsgInfoReq)
                                   messageName:@"ImDvyMsgInfoReq"
                               fileDescription:&ImMsgRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(ImDvyMsgInfoReq__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
      static const char *extraTextFormatInfo =
        "\004\001\013\000\002\006\000\003\007\000\004\010\000";
      [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
    #endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - ImDvyMsgInfoResp

@implementation ImDvyMsgInfoResp

@dynamic imChannelId;
@dynamic userId;
@dynamic imDvyMsgInfoListArray, imDvyMsgInfoListArray_Count;

typedef struct ImDvyMsgInfoResp__storage_ {
  uint32_t _has_storage_[1];
  NSString *imChannelId;
  NSString *userId;
  NSMutableArray *imDvyMsgInfoListArray;
} ImDvyMsgInfoResp__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "imChannelId",
        .dataTypeSpecific.clazz = Nil,
        .number = ImDvyMsgInfoResp_FieldNumber_ImChannelId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(ImDvyMsgInfoResp__storage_, imChannelId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "userId",
        .dataTypeSpecific.clazz = Nil,
        .number = ImDvyMsgInfoResp_FieldNumber_UserId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(ImDvyMsgInfoResp__storage_, userId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "imDvyMsgInfoListArray",
        .dataTypeSpecific.clazz = GPBObjCClass(ImDvyMsgInfo),
        .number = ImDvyMsgInfoResp_FieldNumber_ImDvyMsgInfoListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(ImDvyMsgInfoResp__storage_, imDvyMsgInfoListArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(ImDvyMsgInfoResp)
                                   messageName:@"ImDvyMsgInfoResp"
                               fileDescription:&ImMsgRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(ImDvyMsgInfoResp__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
      static const char *extraTextFormatInfo =
        "\003\001\013\000\002\006\000\005\000ImDvyMsgInfoList\000";
      [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
    #endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - ImDvyMsgInfo

@implementation ImDvyMsgInfo

@dynamic userId;
@dynamic orderNumber;
@dynamic prodName;
@dynamic prodCount;
@dynamic createTime;
@dynamic dvyOrderNumber;

typedef struct ImDvyMsgInfo__storage_ {
  uint32_t _has_storage_[1];
  int32_t prodCount;
  NSString *userId;
  NSString *orderNumber;
  NSString *prodName;
  NSString *createTime;
  NSString *dvyOrderNumber;
} ImDvyMsgInfo__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "userId",
        .dataTypeSpecific.clazz = Nil,
        .number = ImDvyMsgInfo_FieldNumber_UserId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(ImDvyMsgInfo__storage_, userId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "orderNumber",
        .dataTypeSpecific.clazz = Nil,
        .number = ImDvyMsgInfo_FieldNumber_OrderNumber,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(ImDvyMsgInfo__storage_, orderNumber),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "prodName",
        .dataTypeSpecific.clazz = Nil,
        .number = ImDvyMsgInfo_FieldNumber_ProdName,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(ImDvyMsgInfo__storage_, prodName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "prodCount",
        .dataTypeSpecific.clazz = Nil,
        .number = ImDvyMsgInfo_FieldNumber_ProdCount,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(ImDvyMsgInfo__storage_, prodCount),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.clazz = Nil,
        .number = ImDvyMsgInfo_FieldNumber_CreateTime,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(ImDvyMsgInfo__storage_, createTime),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "dvyOrderNumber",
        .dataTypeSpecific.clazz = Nil,
        .number = ImDvyMsgInfo_FieldNumber_DvyOrderNumber,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(ImDvyMsgInfo__storage_, dvyOrderNumber),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(ImDvyMsgInfo)
                                   messageName:@"ImDvyMsgInfo"
                               fileDescription:&ImMsgRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(ImDvyMsgInfo__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
      static const char *extraTextFormatInfo =
        "\006\001\006\000\002\013\000\003\010\000\004\t\000\005\n\000\006\016\000";
      [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
    #endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - RefundMsgListReq

@implementation RefundMsgListReq

@dynamic userId;
@dynamic pageNum;
@dynamic pageSize;

typedef struct RefundMsgListReq__storage_ {
  uint32_t _has_storage_[1];
  int32_t pageNum;
  int32_t pageSize;
  NSString *userId;
} RefundMsgListReq__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "userId",
        .dataTypeSpecific.clazz = Nil,
        .number = RefundMsgListReq_FieldNumber_UserId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(RefundMsgListReq__storage_, userId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "pageNum",
        .dataTypeSpecific.clazz = Nil,
        .number = RefundMsgListReq_FieldNumber_PageNum,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(RefundMsgListReq__storage_, pageNum),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "pageSize",
        .dataTypeSpecific.clazz = Nil,
        .number = RefundMsgListReq_FieldNumber_PageSize,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(RefundMsgListReq__storage_, pageSize),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(RefundMsgListReq)
                                   messageName:@"RefundMsgListReq"
                               fileDescription:&ImMsgRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(RefundMsgListReq__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
      static const char *extraTextFormatInfo =
        "\003\001\006\000\002\007\000\003\010\000";
      [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
    #endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - RefundMsgListResp

@implementation RefundMsgListResp

@dynamic userId;
@dynamic msgUnReadCount;
@dynamic dvyUnReadCount;
@dynamic refundUnReadCount;
@dynamic imRefundMsgListsArray, imRefundMsgListsArray_Count;

typedef struct RefundMsgListResp__storage_ {
  uint32_t _has_storage_[1];
  int32_t msgUnReadCount;
  int32_t dvyUnReadCount;
  int32_t refundUnReadCount;
  NSString *userId;
  NSMutableArray *imRefundMsgListsArray;
} RefundMsgListResp__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "userId",
        .dataTypeSpecific.clazz = Nil,
        .number = RefundMsgListResp_FieldNumber_UserId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(RefundMsgListResp__storage_, userId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "msgUnReadCount",
        .dataTypeSpecific.clazz = Nil,
        .number = RefundMsgListResp_FieldNumber_MsgUnReadCount,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(RefundMsgListResp__storage_, msgUnReadCount),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "dvyUnReadCount",
        .dataTypeSpecific.clazz = Nil,
        .number = RefundMsgListResp_FieldNumber_DvyUnReadCount,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(RefundMsgListResp__storage_, dvyUnReadCount),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "refundUnReadCount",
        .dataTypeSpecific.clazz = Nil,
        .number = RefundMsgListResp_FieldNumber_RefundUnReadCount,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(RefundMsgListResp__storage_, refundUnReadCount),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "imRefundMsgListsArray",
        .dataTypeSpecific.clazz = GPBObjCClass(ImRefundMsgList),
        .number = RefundMsgListResp_FieldNumber_ImRefundMsgListsArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(RefundMsgListResp__storage_, imRefundMsgListsArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(RefundMsgListResp)
                                   messageName:@"RefundMsgListResp"
                               fileDescription:&ImMsgRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(RefundMsgListResp__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
      static const char *extraTextFormatInfo =
        "\005\001\006\000\002\016\000\003\016\000\004\021\000\005\000imRefundMsgLists\000";
      [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
    #endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - ImRefundMsgList

@implementation ImRefundMsgList

@dynamic imChannel;
@dynamic shopId;
@dynamic shopName;
@dynamic shopImg;
@dynamic endMsg;
@dynamic unReadSize;
@dynamic endMsgTime;

typedef struct ImRefundMsgList__storage_ {
  uint32_t _has_storage_[1];
  int32_t unReadSize;
  NSString *imChannel;
  NSString *shopName;
  NSString *shopImg;
  NSString *endMsg;
  NSString *endMsgTime;
  int64_t shopId;
} ImRefundMsgList__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "imChannel",
        .dataTypeSpecific.clazz = Nil,
        .number = ImRefundMsgList_FieldNumber_ImChannel,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(ImRefundMsgList__storage_, imChannel),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "shopId",
        .dataTypeSpecific.clazz = Nil,
        .number = ImRefundMsgList_FieldNumber_ShopId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(ImRefundMsgList__storage_, shopId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "shopName",
        .dataTypeSpecific.clazz = Nil,
        .number = ImRefundMsgList_FieldNumber_ShopName,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(ImRefundMsgList__storage_, shopName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "shopImg",
        .dataTypeSpecific.clazz = Nil,
        .number = ImRefundMsgList_FieldNumber_ShopImg,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(ImRefundMsgList__storage_, shopImg),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "endMsg",
        .dataTypeSpecific.clazz = Nil,
        .number = ImRefundMsgList_FieldNumber_EndMsg,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(ImRefundMsgList__storage_, endMsg),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "unReadSize",
        .dataTypeSpecific.clazz = Nil,
        .number = ImRefundMsgList_FieldNumber_UnReadSize,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(ImRefundMsgList__storage_, unReadSize),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "endMsgTime",
        .dataTypeSpecific.clazz = Nil,
        .number = ImRefundMsgList_FieldNumber_EndMsgTime,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(ImRefundMsgList__storage_, endMsgTime),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(ImRefundMsgList)
                                   messageName:@"ImRefundMsgList"
                               fileDescription:&ImMsgRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(ImRefundMsgList__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
      static const char *extraTextFormatInfo =
        "\007\001\t\000\002\006\000\003\010\000\004\007\000\005\006\000\006\n\000\007\n\000";
      [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
    #endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - ImRefundMsgInfoReq

@implementation ImRefundMsgInfoReq

@dynamic imChannelId;
@dynamic userId;
@dynamic pageNum;
@dynamic pageSize;

typedef struct ImRefundMsgInfoReq__storage_ {
  uint32_t _has_storage_[1];
  int32_t pageNum;
  int32_t pageSize;
  NSString *imChannelId;
  NSString *userId;
} ImRefundMsgInfoReq__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "imChannelId",
        .dataTypeSpecific.clazz = Nil,
        .number = ImRefundMsgInfoReq_FieldNumber_ImChannelId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(ImRefundMsgInfoReq__storage_, imChannelId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "userId",
        .dataTypeSpecific.clazz = Nil,
        .number = ImRefundMsgInfoReq_FieldNumber_UserId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(ImRefundMsgInfoReq__storage_, userId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "pageNum",
        .dataTypeSpecific.clazz = Nil,
        .number = ImRefundMsgInfoReq_FieldNumber_PageNum,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(ImRefundMsgInfoReq__storage_, pageNum),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "pageSize",
        .dataTypeSpecific.clazz = Nil,
        .number = ImRefundMsgInfoReq_FieldNumber_PageSize,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(ImRefundMsgInfoReq__storage_, pageSize),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(ImRefundMsgInfoReq)
                                   messageName:@"ImRefundMsgInfoReq"
                               fileDescription:&ImMsgRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(ImRefundMsgInfoReq__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
      static const char *extraTextFormatInfo =
        "\004\001\013\000\002\006\000\003\007\000\004\010\000";
      [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
    #endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - ImRefundMsgInfoResp

@implementation ImRefundMsgInfoResp

@dynamic imChannelId;
@dynamic userId;
@dynamic imRefundMsgInfoArray, imRefundMsgInfoArray_Count;

typedef struct ImRefundMsgInfoResp__storage_ {
  uint32_t _has_storage_[1];
  NSString *imChannelId;
  NSString *userId;
  NSMutableArray *imRefundMsgInfoArray;
} ImRefundMsgInfoResp__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "imChannelId",
        .dataTypeSpecific.clazz = Nil,
        .number = ImRefundMsgInfoResp_FieldNumber_ImChannelId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(ImRefundMsgInfoResp__storage_, imChannelId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "userId",
        .dataTypeSpecific.clazz = Nil,
        .number = ImRefundMsgInfoResp_FieldNumber_UserId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(ImRefundMsgInfoResp__storage_, userId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "imRefundMsgInfoArray",
        .dataTypeSpecific.clazz = GPBObjCClass(ImRefundMsgInfo),
        .number = ImRefundMsgInfoResp_FieldNumber_ImRefundMsgInfoArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(ImRefundMsgInfoResp__storage_, imRefundMsgInfoArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(ImRefundMsgInfoResp)
                                   messageName:@"ImRefundMsgInfoResp"
                               fileDescription:&ImMsgRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(ImRefundMsgInfoResp__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
      static const char *extraTextFormatInfo =
        "\003\001\013\000\002\006\000\003\000imRefundMsgInfo\000";
      [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
    #endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - ImRefundMsgInfo

@implementation ImRefundMsgInfo

@dynamic userId;
@dynamic orderNumber;
@dynamic refundId;
@dynamic refundAmount;
@dynamic prodName;
@dynamic prodCount;
@dynamic createTime;
@dynamic refundType;
@dynamic refundStatus;
@dynamic shopName;
@dynamic returnPostalCode;
@dynamic tel;
@dynamic returnProvince;
@dynamic returnCity;
@dynamic returnArea;
@dynamic returnAddress;

typedef struct ImRefundMsgInfo__storage_ {
  uint32_t _has_storage_[1];
  int32_t prodCount;
  int32_t refundType;
  int32_t refundStatus;
  NSString *userId;
  NSString *orderNumber;
  NSString *prodName;
  NSString *createTime;
  NSString *shopName;
  NSString *returnPostalCode;
  NSString *tel;
  NSString *returnProvince;
  NSString *returnCity;
  NSString *returnArea;
  NSString *returnAddress;
  int64_t refundId;
  int64_t refundAmount;
} ImRefundMsgInfo__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "userId",
        .dataTypeSpecific.clazz = Nil,
        .number = ImRefundMsgInfo_FieldNumber_UserId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(ImRefundMsgInfo__storage_, userId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "orderNumber",
        .dataTypeSpecific.clazz = Nil,
        .number = ImRefundMsgInfo_FieldNumber_OrderNumber,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(ImRefundMsgInfo__storage_, orderNumber),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "refundId",
        .dataTypeSpecific.clazz = Nil,
        .number = ImRefundMsgInfo_FieldNumber_RefundId,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(ImRefundMsgInfo__storage_, refundId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "refundAmount",
        .dataTypeSpecific.clazz = Nil,
        .number = ImRefundMsgInfo_FieldNumber_RefundAmount,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(ImRefundMsgInfo__storage_, refundAmount),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "prodName",
        .dataTypeSpecific.clazz = Nil,
        .number = ImRefundMsgInfo_FieldNumber_ProdName,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(ImRefundMsgInfo__storage_, prodName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "prodCount",
        .dataTypeSpecific.clazz = Nil,
        .number = ImRefundMsgInfo_FieldNumber_ProdCount,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(ImRefundMsgInfo__storage_, prodCount),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.clazz = Nil,
        .number = ImRefundMsgInfo_FieldNumber_CreateTime,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(ImRefundMsgInfo__storage_, createTime),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "refundType",
        .dataTypeSpecific.clazz = Nil,
        .number = ImRefundMsgInfo_FieldNumber_RefundType,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(ImRefundMsgInfo__storage_, refundType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "refundStatus",
        .dataTypeSpecific.clazz = Nil,
        .number = ImRefundMsgInfo_FieldNumber_RefundStatus,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(ImRefundMsgInfo__storage_, refundStatus),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "shopName",
        .dataTypeSpecific.clazz = Nil,
        .number = ImRefundMsgInfo_FieldNumber_ShopName,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(ImRefundMsgInfo__storage_, shopName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "returnPostalCode",
        .dataTypeSpecific.clazz = Nil,
        .number = ImRefundMsgInfo_FieldNumber_ReturnPostalCode,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(ImRefundMsgInfo__storage_, returnPostalCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "tel",
        .dataTypeSpecific.clazz = Nil,
        .number = ImRefundMsgInfo_FieldNumber_Tel,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(ImRefundMsgInfo__storage_, tel),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "returnProvince",
        .dataTypeSpecific.clazz = Nil,
        .number = ImRefundMsgInfo_FieldNumber_ReturnProvince,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(ImRefundMsgInfo__storage_, returnProvince),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "returnCity",
        .dataTypeSpecific.clazz = Nil,
        .number = ImRefundMsgInfo_FieldNumber_ReturnCity,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(ImRefundMsgInfo__storage_, returnCity),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "returnArea",
        .dataTypeSpecific.clazz = Nil,
        .number = ImRefundMsgInfo_FieldNumber_ReturnArea,
        .hasIndex = 14,
        .offset = (uint32_t)offsetof(ImRefundMsgInfo__storage_, returnArea),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "returnAddress",
        .dataTypeSpecific.clazz = Nil,
        .number = ImRefundMsgInfo_FieldNumber_ReturnAddress,
        .hasIndex = 15,
        .offset = (uint32_t)offsetof(ImRefundMsgInfo__storage_, returnAddress),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(ImRefundMsgInfo)
                                   messageName:@"ImRefundMsgInfo"
                               fileDescription:&ImMsgRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(ImRefundMsgInfo__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
      static const char *extraTextFormatInfo =
        "\017\001\006\000\002\013\000\003\010\000\004\014\000\005\010\000\006\t\000\007\n\000\010\n\000\t\014\000\n\010\000\013\020\000\r\016\000\016\n\000"
        "\017\n\000\020\r\000";
      [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
    #endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - DvyListDeleteReq

@implementation DvyListDeleteReq

@dynamic imChannelId;
@dynamic userId;
@dynamic pageNum;
@dynamic pageSize;

typedef struct DvyListDeleteReq__storage_ {
  uint32_t _has_storage_[1];
  int32_t pageNum;
  int32_t pageSize;
  NSString *imChannelId;
  NSString *userId;
} DvyListDeleteReq__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "imChannelId",
        .dataTypeSpecific.clazz = Nil,
        .number = DvyListDeleteReq_FieldNumber_ImChannelId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(DvyListDeleteReq__storage_, imChannelId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "userId",
        .dataTypeSpecific.clazz = Nil,
        .number = DvyListDeleteReq_FieldNumber_UserId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(DvyListDeleteReq__storage_, userId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "pageNum",
        .dataTypeSpecific.clazz = Nil,
        .number = DvyListDeleteReq_FieldNumber_PageNum,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(DvyListDeleteReq__storage_, pageNum),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "pageSize",
        .dataTypeSpecific.clazz = Nil,
        .number = DvyListDeleteReq_FieldNumber_PageSize,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(DvyListDeleteReq__storage_, pageSize),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(DvyListDeleteReq)
                                   messageName:@"DvyListDeleteReq"
                               fileDescription:&ImMsgRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(DvyListDeleteReq__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
      static const char *extraTextFormatInfo =
        "\004\001\013\000\002\006\000\003\007\000\004\010\000";
      [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
    #endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - DvyListDeleteResp

@implementation DvyListDeleteResp

@dynamic imChannelId;
@dynamic userId;
@dynamic pageNum;
@dynamic pageSize;
@dynamic hasImDvyMsgList, imDvyMsgList;
@dynamic msgUnReadCount;
@dynamic dvyUnReadCount;
@dynamic refundUnReadCount;

typedef struct DvyListDeleteResp__storage_ {
  uint32_t _has_storage_[1];
  int32_t pageNum;
  int32_t pageSize;
  int32_t msgUnReadCount;
  int32_t dvyUnReadCount;
  int32_t refundUnReadCount;
  NSString *imChannelId;
  NSString *userId;
  ImDvyMsgList *imDvyMsgList;
} DvyListDeleteResp__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "imChannelId",
        .dataTypeSpecific.clazz = Nil,
        .number = DvyListDeleteResp_FieldNumber_ImChannelId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(DvyListDeleteResp__storage_, imChannelId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "userId",
        .dataTypeSpecific.clazz = Nil,
        .number = DvyListDeleteResp_FieldNumber_UserId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(DvyListDeleteResp__storage_, userId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "pageNum",
        .dataTypeSpecific.clazz = Nil,
        .number = DvyListDeleteResp_FieldNumber_PageNum,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(DvyListDeleteResp__storage_, pageNum),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "pageSize",
        .dataTypeSpecific.clazz = Nil,
        .number = DvyListDeleteResp_FieldNumber_PageSize,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(DvyListDeleteResp__storage_, pageSize),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "imDvyMsgList",
        .dataTypeSpecific.clazz = GPBObjCClass(ImDvyMsgList),
        .number = DvyListDeleteResp_FieldNumber_ImDvyMsgList,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(DvyListDeleteResp__storage_, imDvyMsgList),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "msgUnReadCount",
        .dataTypeSpecific.clazz = Nil,
        .number = DvyListDeleteResp_FieldNumber_MsgUnReadCount,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(DvyListDeleteResp__storage_, msgUnReadCount),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "dvyUnReadCount",
        .dataTypeSpecific.clazz = Nil,
        .number = DvyListDeleteResp_FieldNumber_DvyUnReadCount,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(DvyListDeleteResp__storage_, dvyUnReadCount),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "refundUnReadCount",
        .dataTypeSpecific.clazz = Nil,
        .number = DvyListDeleteResp_FieldNumber_RefundUnReadCount,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(DvyListDeleteResp__storage_, refundUnReadCount),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(DvyListDeleteResp)
                                   messageName:@"DvyListDeleteResp"
                               fileDescription:&ImMsgRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(DvyListDeleteResp__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
      static const char *extraTextFormatInfo =
        "\010\001\013\000\002\006\000\003\007\000\004\010\000\005\014\000\006\016\000\007\016\000\010\021\000";
      [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
    #endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - RefundListDeleteReq

@implementation RefundListDeleteReq

@dynamic imChannelId;
@dynamic userId;
@dynamic pageNum;
@dynamic pageSize;

typedef struct RefundListDeleteReq__storage_ {
  uint32_t _has_storage_[1];
  int32_t pageNum;
  int32_t pageSize;
  NSString *imChannelId;
  NSString *userId;
} RefundListDeleteReq__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "imChannelId",
        .dataTypeSpecific.clazz = Nil,
        .number = RefundListDeleteReq_FieldNumber_ImChannelId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(RefundListDeleteReq__storage_, imChannelId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "userId",
        .dataTypeSpecific.clazz = Nil,
        .number = RefundListDeleteReq_FieldNumber_UserId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(RefundListDeleteReq__storage_, userId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "pageNum",
        .dataTypeSpecific.clazz = Nil,
        .number = RefundListDeleteReq_FieldNumber_PageNum,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(RefundListDeleteReq__storage_, pageNum),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "pageSize",
        .dataTypeSpecific.clazz = Nil,
        .number = RefundListDeleteReq_FieldNumber_PageSize,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(RefundListDeleteReq__storage_, pageSize),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(RefundListDeleteReq)
                                   messageName:@"RefundListDeleteReq"
                               fileDescription:&ImMsgRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(RefundListDeleteReq__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
      static const char *extraTextFormatInfo =
        "\004\001\013\000\002\006\000\003\007\000\004\010\000";
      [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
    #endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - RefundListDeleteResp

@implementation RefundListDeleteResp

@dynamic imChannelId;
@dynamic userId;
@dynamic pageNum;
@dynamic pageSize;
@dynamic hasImRefundMsgList, imRefundMsgList;
@dynamic msgUnReadCount;
@dynamic dvyUnReadCount;
@dynamic refundUnReadCount;

typedef struct RefundListDeleteResp__storage_ {
  uint32_t _has_storage_[1];
  int32_t pageNum;
  int32_t pageSize;
  int32_t msgUnReadCount;
  int32_t dvyUnReadCount;
  int32_t refundUnReadCount;
  NSString *imChannelId;
  NSString *userId;
  ImRefundMsgList *imRefundMsgList;
} RefundListDeleteResp__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "imChannelId",
        .dataTypeSpecific.clazz = Nil,
        .number = RefundListDeleteResp_FieldNumber_ImChannelId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(RefundListDeleteResp__storage_, imChannelId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "userId",
        .dataTypeSpecific.clazz = Nil,
        .number = RefundListDeleteResp_FieldNumber_UserId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(RefundListDeleteResp__storage_, userId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "pageNum",
        .dataTypeSpecific.clazz = Nil,
        .number = RefundListDeleteResp_FieldNumber_PageNum,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(RefundListDeleteResp__storage_, pageNum),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "pageSize",
        .dataTypeSpecific.clazz = Nil,
        .number = RefundListDeleteResp_FieldNumber_PageSize,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(RefundListDeleteResp__storage_, pageSize),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "imRefundMsgList",
        .dataTypeSpecific.clazz = GPBObjCClass(ImRefundMsgList),
        .number = RefundListDeleteResp_FieldNumber_ImRefundMsgList,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(RefundListDeleteResp__storage_, imRefundMsgList),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "msgUnReadCount",
        .dataTypeSpecific.clazz = Nil,
        .number = RefundListDeleteResp_FieldNumber_MsgUnReadCount,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(RefundListDeleteResp__storage_, msgUnReadCount),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "dvyUnReadCount",
        .dataTypeSpecific.clazz = Nil,
        .number = RefundListDeleteResp_FieldNumber_DvyUnReadCount,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(RefundListDeleteResp__storage_, dvyUnReadCount),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "refundUnReadCount",
        .dataTypeSpecific.clazz = Nil,
        .number = RefundListDeleteResp_FieldNumber_RefundUnReadCount,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(RefundListDeleteResp__storage_, refundUnReadCount),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(RefundListDeleteResp)
                                   messageName:@"RefundListDeleteResp"
                               fileDescription:&ImMsgRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(RefundListDeleteResp__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
      static const char *extraTextFormatInfo =
        "\010\001\013\000\002\006\000\003\007\000\004\010\000\005\017\000\006\016\000\007\016\000\010\021\000";
      [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
    #endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)

// clang-format on
